pipeline:
  name: temp
  identifier: temp
  projectIdentifier: ajhacseng
  orgIdentifier: CSE
  tags: {}
  stages:
    - stage:
        name: teststage
        identifier: teststage
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: dummy
                  identifier: dummy
                  spec:
                    shell: Bash
                    onDelegate: true
                    source:
                      type: Inline
                      spec:
                        script: |-
                          echo "printing vars"
                          echo "<+stage.variables>"
                          vararray=($(echo <+stage.variables> | sed 's/^.//' | sed 's/.$//' | awk -F ', ' '{ for (i = 0; ++i <= NF;) print $i }' ))


                          for item in "${vararray[@]}"
                          do
                              varabc= echo $item | awk -F'=' '{print $1}'
                              vardef= echo $item | awk -F'=' '{print $2}'
                              echo $varabc
                              echo $vardef
                          done

                          if [[ ! -z "<+stage.variables.EXTRA_TAGS>" ]]; then
                            IFS=$'\n'
                            tag_array=($(echo "<+stage.variables.EXTRA_TAGS>" | awk -F ', ' '{ for (i = 0; ++i <= NF;) print $i }' ))
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
        tags: {}
        variables:
          - name: var1
            type: String
            description: ""
            value: dssadasd
          - name: var2
            type: String
            description: ""
            value: dasdad
          - name: EXTRA_TAGS
            type: String
            description: ""
            value: value1,value2,value3
  variables:
    - name: testvar
      type: String
      default: ""
      description: ""
      value: <+input>.allowedValues(true,false)
