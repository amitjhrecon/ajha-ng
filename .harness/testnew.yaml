pipeline:
  name: testnew
  identifier: testnew
  projectIdentifier: ajhacse
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: ah
        identifier: ah
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: ShellScript_1
                  identifier: ShellScript_1
                  spec:
                    shell: Bash
                    executionTarget: {}
                    source:
                      type: Inline
                      spec:
                        script: |-
                          echo "this is test"
                          echo "<+secrets.getValue('account.testsecret')>"
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
        tags: {}
    - stage:
        name: aa
        identifier: aa
        description: ""
        type: Deployment
        spec:
          deploymentType: NativeHelm
          service:
            serviceRef: as
          environment:
            environmentRef: dsadad
            deployToAll: false
            infrastructureDefinitions:
              - identifier: aa
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: ShellScript_1
                  identifier: ShellScript_1
                  spec:
                    shell: Bash
                    executionTarget: {}
                    source:
                      type: Inline
                      spec:
                        script: |-
                          echo "hello"
                          echo "this is test"
                          export KUBECONFIG=${HARNESS_KUBE_CONFIG_PATH}

                          output=$(kubectl get secret/delinea-secret \
                              -n external-secrets \
                              --kubeconfig=$KUBECONFIG \
                              -o go-template \
                              --template '{{.metadata.name}} {{.metadata.creationTimestamp}}')
                          echo "output=$output"
                          if [[ "${output}" == *"delinea-secret"* ]]; then
                            echo "kubectl delete secret regsecret --namespace=external-secrets --kubeconfig=$KUBECONFIG"
                          #  kubectl delete secret regsecret --namespace=<+infra.namespace> --kubeconfig=$KUBECONFIG
                          fi


                          echo "kubectl create secret generic delinea-secret --from-literal=username=DSS-DEVPROD-SECURITY --from-literal=password="<+secrets.getValue('account.testsecret')>"  -n external-secrets --kubeconfig=$KUBECONFIG"
                          #kubectl create secret generic delinea-secret --from-literal=username=DSS-DEVPROD-SECURITY --from-literal=password="<+secrets.getValue('account.testsecret')>"  -n external-secrets --kubeconfig=$KUBECONFIG
                          echo "<+secrets.getValue('account.testsecret')>"
                          echo "<+secrets.getValue('account.testsecret')>"
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
            rollbackSteps:
              - step:
                  name: Helm Rollback
                  identifier: helmRollback
                  type: HelmRollback
                  timeout: 10m
                  spec: {}
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
